Object本身实质上可能相当于一种“数据结构”，与其他节点的互动则多有不便
如果作为Node，本身其实仍然具备Object的“数据存储”功能，而且动态处理、与其他节点的互动也能更加方便一些

现在的方案大致是：
	CharacterManager默认挂在Main节点下
	无论有多少角色位CharacterPlace，统统挂载在CharacterManager下
	如此，角色位之间就仅相差一个同级关系，并且管理者为父级，main只需再来一次父级
	——应该是挺方便了吧
	（另外“非全局”UI，即与玩家关联影响显示效果的UI……这个怎么弄呢……）

与Deck的管理不一样，各个角色位之间的功能差异几乎为0（除非boss？……加tag吧？）
而且角色数量其实是 并未确定的

——这样CharacterManager实际上分担了main之前的一部分任务

——————————————————————————————————————————
地图选点有几种函数：
出生地选点（特殊位置、随机位置（避水））
随机位置（是否避水）
范围点（攻击路径（山挡？）或移动路径）——选好后还要返回计算的距离
无限范围点
直线范围点（Celestia的攻击，或者一些只能直线行走的角色）
指定点（数组吧？）
